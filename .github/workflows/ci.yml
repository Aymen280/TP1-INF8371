name: CI with Gradle (Build, Test & SonarQube)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build and Run Tests
        run: ./gradlew build

  launch-sonarqube:
    name: Launch SonarQube
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List Files in Build Directory
        run: ls -R sonar-application/build/distributions/ || echo "No build directory found!"

      - name: Extract SonarQube Distribution
        run: |
          ZIP_FILE=$(find sonar-application/build/distributions/ -name "*.zip" | head -n 1)
          if [ -z "$ZIP_FILE" ]; then
            echo "No ZIP file found! Exiting..."
            exit 1
          fi
          echo "Extracting $ZIP_FILE..."
          unzip "$ZIP_FILE" -d sonar-application/build/distributions/

      - name: Start SonarQube
        run: |
          cd sonar-application/build/distributions/*/bin/linux-x86-64/
          chmod +x sonar.sh
          ./sonar.sh start

      - name: Wait for SonarQube to be Ready
        run: |
          echo "Waiting for SonarQube to be ready..."
          MAX_RETRIES=40
          RETRIES=0
          until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"' || [ $RETRIES -eq $MAX_RETRIES ]; do
            echo "SonarQube is not ready yet... retrying in 10s"
            sleep 10
            ((RETRIES++))
          done
          if [ $RETRIES -eq $MAX_RETRIES ]; then
            echo "SonarQube did not start in time. Exiting."
            exit 1
          fi
          echo "SonarQube is up and running!"

      - name: Display SonarQube Logs
        run: cat sonar-application/build/distributions/*/logs/sonar.log || echo "No logs found!"
