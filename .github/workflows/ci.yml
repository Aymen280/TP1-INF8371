name: CI with Gradle (Build, Test & SonarQube)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build and Run Tests
        run: ./gradlew build -x test

launch-sonarqube:
  name: Launch SonarQube
  runs-on: ubuntu-latest
  needs: build-and-test  # Ensures SonarQube starts after tests

  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Docker (Fixed Version)
      run: |
        sudo apt-get update
        sudo apt-get remove -y containerd
        sudo apt-get install -y docker.io

    - name: Start SonarQube Container
      run: |
        docker run -d --name sonarqube \
          -p 9000:9000 \
          -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
          -e SONAR_JDBC_URL="jdbc:postgresql://localhost:5432/sonarqube" \
          -e SONAR_JDBC_USERNAME=sonar \
          -e SONAR_JDBC_PASSWORD=sonar \
          sonarqube:lts

    - name: Wait for SonarQube to be Ready
      run: |
        echo "Waiting for SonarQube to be ready..."
        MAX_RETRIES=40
        RETRIES=0
        until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"' || [ $RETRIES -eq $MAX_RETRIES ]; do
          echo "SonarQube is not ready yet... retrying in 10s"
          sleep 10
          ((RETRIES++))
        done
        if [ $RETRIES -eq $MAX_RETRIES ]; then
          echo "SonarQube did not start in time. Exiting."
          exit 1
        fi
        echo "SonarQube is up and running!"

    - name: Display SonarQube Logs
      run: docker logs sonarqube
