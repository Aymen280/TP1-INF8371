name: CI with Gradle (Build, Test & SonarQube)

on:
  push:
    branches:
      - master
      - Feature/add-pipeline
  pull_request:
    branches:
      - master
      - Feature/add-pipeline

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew
        
      - name: Check Cyclomatic Complexity
        run: |
          PROJECT_KEY="TP1-INF8371"  # Remplace par ton vrai Project Key SonarCloud
      
          echo "üîç V√©rification de la complexit√© pour le projet : $PROJECT_KEY"
      
          RESPONSE=$(curl -s "https://sonarcloud.io/api/measures/component?component=${PROJECT_KEY}&metricKeys=complexity" \
            -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}")
      
          echo "üîç R√©ponse brute de SonarCloud : $RESPONSE"
      
          COMPLEXITY=$(echo "$RESPONSE" | jq -r '.component.measures[0].value')
      
          if [[ -z "$COMPLEXITY" || "$COMPLEXITY" == "null" ]]; then
            echo "‚ö†Ô∏è ERREUR : Impossible de r√©cup√©rer la complexit√©, valeur vide ou invalide !"
            exit 1
          fi
      
          echo "üìä Complexit√© d√©tect√©e : $COMPLEXITY"
      
          if [[ "$COMPLEXITY" -gt 500 ]]; then
            echo "üö® ERREUR: La complexit√© d√©passe la limite autoris√©e (500) !"
            exit 1
          fi
      

      - name: Build and Run Tests
        run: ./gradlew build test --info --stacktrace

      - name: Afficher les tests ex√©cut√©s
        run: |
          echo "Tests ex√©cut√©s :"
          cat build/reports/tests/test/index.html || echo "Fichier de rapport non trouv√©"
      

  launch-sonarqube:
    name: Launch SonarQube
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Rebuild the Project
        run: ./gradlew build -x test --stacktrace

      - name: List Build Directory After Rebuild
        run: ls -R sonar-application/build/ || echo "No build directory found!"

      - name: Extract SonarQube Distribution
        run: |
          ZIP_FILE=$(find sonar-application/build/distributions/ -name "*.zip" | head -n 1)
          if [ -z "$ZIP_FILE" ]; then
            echo "No ZIP file found! Exiting..."
            exit 1
          fi
          echo "Extracting $ZIP_FILE..."
          unzip "$ZIP_FILE" -d sonar-application/build/distributions/

      - name: Grant Execution Permission
        run: chmod +x sonar-application/build/distributions/*/bin/linux-x86-64/sonar.sh

      - name: Start SonarQube
        run: |
          sonar-application/build/distributions/*/bin/linux-x86-64/sonar.sh start

      - name: Display SonarQube Logs
        run: cat sonar-application/build/distributions/*/logs/sonar.log || echo "No logs found!"