name: CI with Gradle (Build, Test & SonarQube)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build and Run Tests
        run: ./gradlew build test

  launch-sonarqube:
    name: Start SonarQube
    runs-on: ubuntu-latest
    needs: build-and-test

    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl --fail http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --memory=2g  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build project
        run: ./gradlew build -x test

      - name: Start SonarQube via Gradle
        run: ./gradlew sonar:server &

      - name: Wait for SonarQube to be up
        run: |
          echo "Waiting for SonarQube to start..."
          MAX_RETRIES=30  # Timeout apr√®s 2min30s (5s * 30)
          RETRIES=0
          until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"' || [ $RETRIES -eq $MAX_RETRIES ]; do
            echo "SonarQube is not ready yet... retrying in 5s"
            sleep 5
            ((RETRIES++))
          done
          if [ $RETRIES -eq $MAX_RETRIES ]; then
            echo "SonarQube did not start in time. Exiting."
            exit 1
          fi
          echo "SonarQube is up and running!"

      - name: Check SonarQube health
        run: curl -s http://localhost:9000/api/system/health | jq .

